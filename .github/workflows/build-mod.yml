---
name: Build ${{ inputs.name }}

on:
  workflow_call:
    inputs:
      name:
      platform_name:
      runner:

env:
  LIBCLANG_RT_BUILTINS_WASM32_A_URL: http://cdn.jsdelivr.net/gh/jedisct1/libclang_rt.builtins-wasm32.a/precompiled/llvm-19/libclang_rt.builtins-wasm32.a
  WASI_SDK_URL: https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-25/wasi-sdk-25.0-x86_64-linux.deb

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: ${{ github.ref }}

      # Native build
      - name: Build ${{ inputs.name }} ${{ inputs.platform_name }}
        if: inputs.platform_name != 'wasm'
        uses: threeal/cmake-action@v2.1.0
        with:
          generator: Ninja
          cxx-compiler: clang++
          c-compiler: clang
          build-dir: build
          build-args: --target ${{ inputs.name }}

      # WASM build
      - name: Install WASI SDK
        if: inputs.platform_name == 'wasm'
        run: |
          curl -LO ${{ env.WASI_SDK_URL }} && \
          sudo dpkg -i wasi-sdk-*-x86_64-linux.deb && \
          rm *.deb && \
          sudo curl -L ${{ env.LIBCLANG_RT_BUILTINS_WASM32_A_URL }} \
            --output /opt/wasi-sdk/share/wasi-sysroot/lib/wasm32-wasi/libclang_rt.builtins-wasm32.a && \
          ln -s /opt/wasi-sdk/share/wasi-sysroot wasm/wasi-sysroot
      - name: Build ${{ inputs.name }} wasm
        if: inputs.platform_name == 'wasm'
        run: |
          mkdir -p build/bin/${{ inputs.name }} && \
          export PATH=$PATH:/opt/wasi-sdk/bin/ && \
          cd wasm && \
          python3 compile_mod.py ${{ inputs.name }} && \
          mv ../bin/${{ inputs.name }}/game.wasm ../build/bin/${{ inputs.name }}/

      - name: Store builds
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-${{ inputs.platform_name }}.zip
          path: build/bin/${{ inputs.name }}
